{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"KISIA Toolkit Prereqs python3 pip3 virtualenv These should be installed however is appropriate to your system and should be available in your PATH. Set up the environment git clone git@github.com:korsimoro/contractors kisia/toolkit/python/install.sh Activate a development environment . kisia/toolkit/python/dev.sh this will: - activate the virtualenv - pip install the current package with the --editable flag - cd into the development directory You can now run the command as tool Documentation Run make html and open the file _build/html/genindex.html Much todo on the doc front, only basic skeleton in place","title":"Home"},{"location":"#kisia-toolkit","text":"","title":"KISIA Toolkit"},{"location":"#prereqs","text":"python3 pip3 virtualenv These should be installed however is appropriate to your system and should be available in your PATH.","title":"Prereqs"},{"location":"#set-up-the-environment","text":"git clone git@github.com:korsimoro/contractors kisia/toolkit/python/install.sh","title":"Set up the environment"},{"location":"#activate-a-development-environment","text":". kisia/toolkit/python/dev.sh this will: - activate the virtualenv - pip install the current package with the --editable flag - cd into the development directory You can now run the command as tool","title":"Activate a development environment"},{"location":"#documentation","text":"Run make html and open the file _build/html/genindex.html Much todo on the doc front, only basic skeleton in place","title":"Documentation"},{"location":"how-do-i/","text":"Output A Table Dump An Array of Dictionaries","title":"How do I"},{"location":"how-do-i/#output-a-table","text":"","title":"Output A Table"},{"location":"how-do-i/#dump-an-array-of-dictionaries","text":"","title":"Dump An Array of Dictionaries"},{"location":"kbash-manual/","text":"kd kd [COMMAND] [help|--help|-help|-h|?] ... kd is a bash environment supporting development. Functions (modify the current shell) activate Configure shell to match build environment for [COMPONENT] add-command Add a function. add-component cd home, or into /home/ewelton/Desktop/korsimoro/projects/kit-workbench/[C]. add-function Add a function. build Build [C] using component build system cd cd /home/ewelton/Desktop/korsimoro/projects/kit-workbench/[PATH] (or base w/o arg) clean Remove as many artifacts for [C] as we know about describe Describe information about this build env kbash-env Display current environment settings. kbash-troff disable KBASH_TRACE kbash-tron set KBASH_TRACE to trace KBASH internals parallel Control how many jobs run in parallel. reset Reload the environment. setup Initialize a development environment troff Stop bash execution trace. tron Start bash execution trace. Commands (run as subprocesses) about Detailed Information about KBASH component-list Just fetch updates env report KIT-Workbench environment kernel The KIT Workbench Documentation Environment klang Manage KBASH top level languages manual Generate help manual Components bench Identity Tech Workbench - powered by JupyterLab credcom_kernel Credenitial-Commons @identity.com docs Description of docs dsr_kernel Description of dsr_kernel itypescript Description of itypescript nteract Description of nteract tool Python CLI tool_kernel Description of tool_kernel Use kd [FUNCTION|COMMAND|COMPONENT] help for more information. Functions Functions manipulate the local shell variables, unlike commands, which are executed by the shell as a subprocess. activate kd activate [help|--help|-help|-h|?] [COMPONENT] Configure shell to match build environment for [COMPONENT] add-command kd add_command [help|--help|-help|-h|?] COMMAND_NAME Add a function. <<DETAILED INFORMATION ABOUT add_command>> add-component kd add_component [help|--help|-help|-h|?] [COMPONENT] cd home, or into /home/ewelton/Desktop/korsimoro/projects/kit-workbench/[C]. kd component-new [component-name] [component-var-prefix] add-function kd add_function [help|--help|-help|-h|?] FUNCTION_NAME Add a function. <<DETAILED INFORMATION ABOUT add_function>> build kd build [help|--help|-help|-h|?] [COMPONENT] Build [C] using component build system cd kd cd [help|--help|-help|-h|?] [PATH] cd /home/ewelton/Desktop/korsimoro/projects/kit-workbench/[PATH] (or base w/o arg) This is a shell function, which execute cd as follows: cd /home/ewelton/Desktop/korsimoro/projects/kit-workbench/[PATH]. If no PATH is provided, this just cds into cd /home/ewelton/Desktop/korsimoro/projects/kit-workbench clean kd clean [help|--help|-help|-h|?] [COMPONENT] Remove as many artifacts for [C] as we know about kd clean [COMPONENT] ... Goal : Remove as many artifacts for [C] as we know about Components bench Identity Tech Workbench - powered by JupyterLab credcom_kernel Credenitial-Commons @identity.com docs Description of docs dsr_kernel Description of dsr_kernel itypescript Description of itypescript nteract Description of nteract tool Python CLI tool_kernel Description of tool_kernel describe kd describe [help|--help|-help|-h|?] [COMPONENT] Describe information about this build env kd describe [COMPONENT] ... Goal : Describe information about this build env Components bench Identity Tech Workbench - powered by JupyterLab credcom_kernel Credenitial-Commons @identity.com docs Description of docs dsr_kernel Description of dsr_kernel itypescript Description of itypescript nteract Description of nteract tool Python CLI tool_kernel Description of tool_kernel kbash-env kd kbash_env [help|--help|-help|-h|?] Display current environment settings. kd env kbash-troff kd kbash_troff [help|--help|-help|-h|?] disable KBASH_TRACE This is equivalent to export KBASH_TRACE=false kbash-tron kd kbash_tron [help|--help|-help|-h|?] set KBASH_TRACE to trace KBASH internals This is equivalent to export KBASH_TRACE=true parallel kd parallel [help|--help|-help|-h|?] MAXJOBS Control how many jobs run in parallel. Control how many jobs run in parallel reset kd reset [help|--help|-help|-h|?] Reload the environment. In this shell, execute: /home/ewelton/Desktop/korsimoro/projects/kit-workbench/activate.sh This will cause the entire kd runtime to be reloaded, so any changes to functions or commands will be processed. This will update the activation count from 3 to 4 setup kd setup [help|--help|-help|-h|?] [COMPONENT] Initialize a development environment troff kd troff [help|--help|-help|-h|?] Stop bash execution trace. Equivalent to set +x tron kd tron [help|--help|-help|-h|?] Start bash execution trace. Equivalent to set -x Commands about kd <command> [help] kd is a bash environment supporting development. kd is pure anti-pattern, in includes - 'within-environment' mutations- bash functions allow forward mutation of the active environment, with no guarantees of any stable state, save the single application of this function after a clean reset - pure 'side-effect' focus. This is an attempt to identify mutators to the filesystem, and to codify them. All functions and commands in the environment are expected to operate upon the filesystem directly. git provides us exceptional visiblity into changes over the active checkout. kd supports the development of ad-hoc tasks required to effectively build a complex, multi-project system. As knowledge is captured w/in the kd script system, it is added into the compiled node or python build support tools. But when you have to adapt to an existing culture, as in a fork, you need a little grease. The node and python knowledge is the organized grease to glue a complete system onto a consistent base. kd uses a \"Convention over Configuration\" and heavily seeds a bash operating environment with functions and variables, supporting multi-tech integration projects. The ability to \"regenerate\" the environment from the kd reset command means that scripts can be rapidly edited and applied - recorded in a pull-request, and the collective wisdom knitting forward. kd can be rapidly and ad-hoc adjusted, and it is specific to this repository. The bashenv orchestrates the connection of the environment with a conversational mutator - a live bash shell. As this is bound to a repository top, the space underneath is managed - so this is effectively a bash shell over a commit-trail of reference. kd is scoped by directory (or checkout) - based on the KITWB variable. KITWB = /home/ewelton/Desktop/korsimoro/projects/kit-workbench For more information, check out this file: /home/ewelton/Desktop/korsimoro/projects/kit-workbench/docs/bashenv.md In general use kd [cmd] help for more information. component-list Show component list env kd env kernel kd tool_kernel [COMMAND] .... Work with the KISIA Tool. Commands (run as subprocesses) fulltest install kernel setup install kernel spec install kernel test install kernel fulltest kd kernel install Info about kd kernel install setup kd kernel setup Info about kd kernel install spec kd kernel install Info about kd kernel install test kd kernel install Info about kd kernel install klang kd [LANG] .... Manage languages Commands (run as subprocesses) node System Node python System Node ruby System Node node kd node [LANG] .... Manage Local Node python kd python [LANG] .... Manage Local Python ruby kd ruby [LANG] .... Manage Local Ruby Commands (run as subprocesses) cleanrvm Detailed Information about KBASH info Detailed Information about KBASH installrvm Detailed Information about KBASH resetrvm Detailed Information about KBASH cleanrvm Command not found - no 'cleanrvm help' in 'project/klang/ruby' info Command not found - no 'info help' in 'project/klang/ruby' installrvm Command not found - no 'installrvm help' in 'project/klang/ruby' resetrvm Command not found - no 'resetrvm help' in 'project/klang/ruby' manual Recursively assembleup documentation as a markdown file. Components Component Description bench Identity Tech Workbench - powered by JupyterLab credcom_kernel Credenitial-Commons @identity.com docs Description of docs dsr_kernel Description of dsr_kernel itypescript Description of itypescript nteract Description of nteract tool Python CLI tool_kernel Description of tool_kernel bench kd bench [SUBCOMMAND] [OPTIONS] kd bench commands Commands (run as subprocesses) bootstrap Just fetch updates info view docs setup_nvm Setup bootstrap kd bootstrap info kd bench info Info about kd bench setup_nvm kd setup-nvm curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash -e|--echo credcom_kernel kd tool_kernel [COMMAND] .... Work with the KISIA Tool. Commands (run as subprocesses) install install kernel launch install kernel package install kernel patch install kernel install kd credcom_kernel kernel install Create install launch kd credcom_kernel kernel install Create install package kd credcom_kernel kernel package Create Package patch kd credcom_kernel kernel package Create Package docs <<DESCRIBE ANY OPTIONS FOR THIS SCOPE>> kd docs commands Commands (run as subprocesses) renew rebuild docs and launch server serve view docs renew kd docs info Info about kd docs serve kd docs info Info about kd docs dsr_kernel kd tool_kernel [COMMAND] .... Work with the KISIA Tool. Commands (run as subprocesses) install install kernel launch install kernel package install kernel patch install kernel install kd credcom_kernel kernel install Create install launch kd credcom_kernel kernel install Create install package kd credcom_kernel kernel package Create Package patch kd credcom_kernel kernel package Create Package itypescript kd tool_kernel [COMMAND] .... Work with the KISIA Tool. Commands (run as subprocesses) info view docs info kd itypescript info Info about kd itypescript nteract kd tool_kernel [COMMAND] .... Work with the KISIA Tool. Commands (run as subprocesses) start start start kd nteract start Info about kd nteract start tool kd tool_kernel [COMMAND] .... Work with the KISIA Tool. Commands (run as subprocesses) docs init init init initsheets initsheets manual init docs kd tool init write out commands to add and tag initial sheets init kd tool init write out commands to add and tag initial sheets initsheets kd tool initsheets write out commands to add and tag initial sheets manual kd tool init write out commands to add and tag initial sheets tool_kernel kd tool_kernel [COMMAND] .... Work with the KISIA Tool. Commands (run as subprocesses) install install kernel in $KITWB_INSTALLED_KERNELS package create package in $KKTOOL_BASE/dist install kd tool_kernel kernel install Create install package kd tool_kernel kernel package Create Package About kd <command> [help] kd is a bash environment supporting development. kd is pure anti-pattern, in includes - 'within-environment' mutations- bash functions allow forward mutation of the active environment, with no guarantees of any stable state, save the single application of this function after a clean reset - pure 'side-effect' focus. This is an attempt to identify mutators to the filesystem, and to codify them. All functions and commands in the environment are expected to operate upon the filesystem directly. git provides us exceptional visiblity into changes over the active checkout. kd supports the development of ad-hoc tasks required to effectively build a complex, multi-project system. As knowledge is captured w/in the kd script system, it is added into the compiled node or python build support tools. But when you have to adapt to an existing culture, as in a fork, you need a little grease. The node and python knowledge is the organized grease to glue a complete system onto a consistent base. kd uses a \"Convention over Configuration\" and heavily seeds a bash operating environment with functions and variables, supporting multi-tech integration projects. The ability to \"regenerate\" the environment from the kd reset command means that scripts can be rapidly edited and applied - recorded in a pull-request, and the collective wisdom knitting forward. kd can be rapidly and ad-hoc adjusted, and it is specific to this repository. The bashenv orchestrates the connection of the environment with a conversational mutator - a live bash shell. As this is bound to a repository top, the space underneath is managed - so this is effectively a bash shell over a commit-trail of reference. kd is scoped by directory (or checkout) - based on the KITWB variable. KITWB = /home/ewelton/Desktop/korsimoro/projects/kit-workbench For more information, check out this file: /home/ewelton/Desktop/korsimoro/projects/kit-workbench/docs/bashenv.md In general use kd [cmd] help for more information.","title":"KBash"},{"location":"kbash-manual/#kd","text":"kd [COMMAND] [help|--help|-help|-h|?] ... kd is a bash environment supporting development. Functions (modify the current shell) activate Configure shell to match build environment for [COMPONENT] add-command Add a function. add-component cd home, or into /home/ewelton/Desktop/korsimoro/projects/kit-workbench/[C]. add-function Add a function. build Build [C] using component build system cd cd /home/ewelton/Desktop/korsimoro/projects/kit-workbench/[PATH] (or base w/o arg) clean Remove as many artifacts for [C] as we know about describe Describe information about this build env kbash-env Display current environment settings. kbash-troff disable KBASH_TRACE kbash-tron set KBASH_TRACE to trace KBASH internals parallel Control how many jobs run in parallel. reset Reload the environment. setup Initialize a development environment troff Stop bash execution trace. tron Start bash execution trace. Commands (run as subprocesses) about Detailed Information about KBASH component-list Just fetch updates env report KIT-Workbench environment kernel The KIT Workbench Documentation Environment klang Manage KBASH top level languages manual Generate help manual Components bench Identity Tech Workbench - powered by JupyterLab credcom_kernel Credenitial-Commons @identity.com docs Description of docs dsr_kernel Description of dsr_kernel itypescript Description of itypescript nteract Description of nteract tool Python CLI tool_kernel Description of tool_kernel Use kd [FUNCTION|COMMAND|COMPONENT] help for more information.","title":"kd"},{"location":"kbash-manual/#functions","text":"Functions manipulate the local shell variables, unlike commands, which are executed by the shell as a subprocess.","title":"Functions"},{"location":"kbash-manual/#activate","text":"kd activate [help|--help|-help|-h|?] [COMPONENT] Configure shell to match build environment for [COMPONENT]","title":"activate"},{"location":"kbash-manual/#add-command","text":"kd add_command [help|--help|-help|-h|?] COMMAND_NAME Add a function. <<DETAILED INFORMATION ABOUT add_command>>","title":"add-command"},{"location":"kbash-manual/#add-component","text":"kd add_component [help|--help|-help|-h|?] [COMPONENT] cd home, or into /home/ewelton/Desktop/korsimoro/projects/kit-workbench/[C]. kd component-new [component-name] [component-var-prefix]","title":"add-component"},{"location":"kbash-manual/#add-function","text":"kd add_function [help|--help|-help|-h|?] FUNCTION_NAME Add a function. <<DETAILED INFORMATION ABOUT add_function>>","title":"add-function"},{"location":"kbash-manual/#build","text":"kd build [help|--help|-help|-h|?] [COMPONENT] Build [C] using component build system","title":"build"},{"location":"kbash-manual/#cd","text":"kd cd [help|--help|-help|-h|?] [PATH] cd /home/ewelton/Desktop/korsimoro/projects/kit-workbench/[PATH] (or base w/o arg) This is a shell function, which execute cd as follows: cd /home/ewelton/Desktop/korsimoro/projects/kit-workbench/[PATH]. If no PATH is provided, this just cds into cd /home/ewelton/Desktop/korsimoro/projects/kit-workbench","title":"cd"},{"location":"kbash-manual/#clean","text":"kd clean [help|--help|-help|-h|?] [COMPONENT] Remove as many artifacts for [C] as we know about kd clean [COMPONENT] ... Goal : Remove as many artifacts for [C] as we know about Components bench Identity Tech Workbench - powered by JupyterLab credcom_kernel Credenitial-Commons @identity.com docs Description of docs dsr_kernel Description of dsr_kernel itypescript Description of itypescript nteract Description of nteract tool Python CLI tool_kernel Description of tool_kernel","title":"clean"},{"location":"kbash-manual/#describe","text":"kd describe [help|--help|-help|-h|?] [COMPONENT] Describe information about this build env kd describe [COMPONENT] ... Goal : Describe information about this build env Components bench Identity Tech Workbench - powered by JupyterLab credcom_kernel Credenitial-Commons @identity.com docs Description of docs dsr_kernel Description of dsr_kernel itypescript Description of itypescript nteract Description of nteract tool Python CLI tool_kernel Description of tool_kernel","title":"describe"},{"location":"kbash-manual/#kbash-env","text":"kd kbash_env [help|--help|-help|-h|?] Display current environment settings. kd env","title":"kbash-env"},{"location":"kbash-manual/#kbash-troff","text":"kd kbash_troff [help|--help|-help|-h|?] disable KBASH_TRACE This is equivalent to export KBASH_TRACE=false","title":"kbash-troff"},{"location":"kbash-manual/#kbash-tron","text":"kd kbash_tron [help|--help|-help|-h|?] set KBASH_TRACE to trace KBASH internals This is equivalent to export KBASH_TRACE=true","title":"kbash-tron"},{"location":"kbash-manual/#parallel","text":"kd parallel [help|--help|-help|-h|?] MAXJOBS Control how many jobs run in parallel. Control how many jobs run in parallel","title":"parallel"},{"location":"kbash-manual/#reset","text":"kd reset [help|--help|-help|-h|?] Reload the environment. In this shell, execute: /home/ewelton/Desktop/korsimoro/projects/kit-workbench/activate.sh This will cause the entire kd runtime to be reloaded, so any changes to functions or commands will be processed. This will update the activation count from 3 to 4","title":"reset"},{"location":"kbash-manual/#setup","text":"kd setup [help|--help|-help|-h|?] [COMPONENT] Initialize a development environment","title":"setup"},{"location":"kbash-manual/#troff","text":"kd troff [help|--help|-help|-h|?] Stop bash execution trace. Equivalent to set +x","title":"troff"},{"location":"kbash-manual/#tron","text":"kd tron [help|--help|-help|-h|?] Start bash execution trace. Equivalent to set -x","title":"tron"},{"location":"kbash-manual/#commands","text":"","title":"Commands"},{"location":"kbash-manual/#about","text":"kd <command> [help] kd is a bash environment supporting development. kd is pure anti-pattern, in includes - 'within-environment' mutations- bash functions allow forward mutation of the active environment, with no guarantees of any stable state, save the single application of this function after a clean reset - pure 'side-effect' focus. This is an attempt to identify mutators to the filesystem, and to codify them. All functions and commands in the environment are expected to operate upon the filesystem directly. git provides us exceptional visiblity into changes over the active checkout. kd supports the development of ad-hoc tasks required to effectively build a complex, multi-project system. As knowledge is captured w/in the kd script system, it is added into the compiled node or python build support tools. But when you have to adapt to an existing culture, as in a fork, you need a little grease. The node and python knowledge is the organized grease to glue a complete system onto a consistent base. kd uses a \"Convention over Configuration\" and heavily seeds a bash operating environment with functions and variables, supporting multi-tech integration projects. The ability to \"regenerate\" the environment from the kd reset command means that scripts can be rapidly edited and applied - recorded in a pull-request, and the collective wisdom knitting forward. kd can be rapidly and ad-hoc adjusted, and it is specific to this repository. The bashenv orchestrates the connection of the environment with a conversational mutator - a live bash shell. As this is bound to a repository top, the space underneath is managed - so this is effectively a bash shell over a commit-trail of reference. kd is scoped by directory (or checkout) - based on the KITWB variable. KITWB = /home/ewelton/Desktop/korsimoro/projects/kit-workbench For more information, check out this file: /home/ewelton/Desktop/korsimoro/projects/kit-workbench/docs/bashenv.md In general use kd [cmd] help for more information.","title":"about"},{"location":"kbash-manual/#component-list","text":"Show component list","title":"component-list"},{"location":"kbash-manual/#env","text":"kd env","title":"env"},{"location":"kbash-manual/#kernel","text":"kd tool_kernel [COMMAND] .... Work with the KISIA Tool. Commands (run as subprocesses) fulltest install kernel setup install kernel spec install kernel test install kernel","title":"kernel"},{"location":"kbash-manual/#fulltest","text":"kd kernel install Info about kd kernel install","title":"fulltest"},{"location":"kbash-manual/#setup_1","text":"kd kernel setup Info about kd kernel install","title":"setup"},{"location":"kbash-manual/#spec","text":"kd kernel install Info about kd kernel install","title":"spec"},{"location":"kbash-manual/#test","text":"kd kernel install Info about kd kernel install","title":"test"},{"location":"kbash-manual/#klang","text":"kd [LANG] .... Manage languages Commands (run as subprocesses) node System Node python System Node ruby System Node","title":"klang"},{"location":"kbash-manual/#node","text":"kd node [LANG] .... Manage Local Node","title":"node"},{"location":"kbash-manual/#python","text":"kd python [LANG] .... Manage Local Python","title":"python"},{"location":"kbash-manual/#ruby","text":"kd ruby [LANG] .... Manage Local Ruby Commands (run as subprocesses) cleanrvm Detailed Information about KBASH info Detailed Information about KBASH installrvm Detailed Information about KBASH resetrvm Detailed Information about KBASH","title":"ruby"},{"location":"kbash-manual/#cleanrvm","text":"Command not found - no 'cleanrvm help' in 'project/klang/ruby'","title":"cleanrvm"},{"location":"kbash-manual/#info","text":"Command not found - no 'info help' in 'project/klang/ruby'","title":"info"},{"location":"kbash-manual/#installrvm","text":"Command not found - no 'installrvm help' in 'project/klang/ruby'","title":"installrvm"},{"location":"kbash-manual/#resetrvm","text":"Command not found - no 'resetrvm help' in 'project/klang/ruby'","title":"resetrvm"},{"location":"kbash-manual/#manual","text":"Recursively assembleup documentation as a markdown file.","title":"manual"},{"location":"kbash-manual/#components","text":"Component Description bench Identity Tech Workbench - powered by JupyterLab credcom_kernel Credenitial-Commons @identity.com docs Description of docs dsr_kernel Description of dsr_kernel itypescript Description of itypescript nteract Description of nteract tool Python CLI tool_kernel Description of tool_kernel","title":"Components"},{"location":"kbash-manual/#bench","text":"kd bench [SUBCOMMAND] [OPTIONS] kd bench commands Commands (run as subprocesses) bootstrap Just fetch updates info view docs setup_nvm Setup","title":"bench"},{"location":"kbash-manual/#bootstrap","text":"kd bootstrap","title":"bootstrap"},{"location":"kbash-manual/#info_1","text":"kd bench info Info about kd bench","title":"info"},{"location":"kbash-manual/#setup_nvm","text":"kd setup-nvm curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash -e|--echo","title":"setup_nvm"},{"location":"kbash-manual/#credcom_kernel","text":"kd tool_kernel [COMMAND] .... Work with the KISIA Tool. Commands (run as subprocesses) install install kernel launch install kernel package install kernel patch install kernel","title":"credcom_kernel"},{"location":"kbash-manual/#install","text":"kd credcom_kernel kernel install Create install","title":"install"},{"location":"kbash-manual/#launch","text":"kd credcom_kernel kernel install Create install","title":"launch"},{"location":"kbash-manual/#package","text":"kd credcom_kernel kernel package Create Package","title":"package"},{"location":"kbash-manual/#patch","text":"kd credcom_kernel kernel package Create Package","title":"patch"},{"location":"kbash-manual/#docs","text":"<<DESCRIBE ANY OPTIONS FOR THIS SCOPE>> kd docs commands Commands (run as subprocesses) renew rebuild docs and launch server serve view docs","title":"docs"},{"location":"kbash-manual/#renew","text":"kd docs info Info about kd docs","title":"renew"},{"location":"kbash-manual/#serve","text":"kd docs info Info about kd docs","title":"serve"},{"location":"kbash-manual/#dsr_kernel","text":"kd tool_kernel [COMMAND] .... Work with the KISIA Tool. Commands (run as subprocesses) install install kernel launch install kernel package install kernel patch install kernel","title":"dsr_kernel"},{"location":"kbash-manual/#install_1","text":"kd credcom_kernel kernel install Create install","title":"install"},{"location":"kbash-manual/#launch_1","text":"kd credcom_kernel kernel install Create install","title":"launch"},{"location":"kbash-manual/#package_1","text":"kd credcom_kernel kernel package Create Package","title":"package"},{"location":"kbash-manual/#patch_1","text":"kd credcom_kernel kernel package Create Package","title":"patch"},{"location":"kbash-manual/#itypescript","text":"kd tool_kernel [COMMAND] .... Work with the KISIA Tool. Commands (run as subprocesses) info view docs","title":"itypescript"},{"location":"kbash-manual/#info_2","text":"kd itypescript info Info about kd itypescript","title":"info"},{"location":"kbash-manual/#nteract","text":"kd tool_kernel [COMMAND] .... Work with the KISIA Tool. Commands (run as subprocesses) start start","title":"nteract"},{"location":"kbash-manual/#start","text":"kd nteract start Info about kd nteract start","title":"start"},{"location":"kbash-manual/#tool","text":"kd tool_kernel [COMMAND] .... Work with the KISIA Tool. Commands (run as subprocesses) docs init init init initsheets initsheets manual init","title":"tool"},{"location":"kbash-manual/#docs_1","text":"kd tool init write out commands to add and tag initial sheets","title":"docs"},{"location":"kbash-manual/#init","text":"kd tool init write out commands to add and tag initial sheets","title":"init"},{"location":"kbash-manual/#initsheets","text":"kd tool initsheets write out commands to add and tag initial sheets","title":"initsheets"},{"location":"kbash-manual/#manual_1","text":"kd tool init write out commands to add and tag initial sheets","title":"manual"},{"location":"kbash-manual/#tool_kernel","text":"kd tool_kernel [COMMAND] .... Work with the KISIA Tool. Commands (run as subprocesses) install install kernel in $KITWB_INSTALLED_KERNELS package create package in $KKTOOL_BASE/dist","title":"tool_kernel"},{"location":"kbash-manual/#install_2","text":"kd tool_kernel kernel install Create install","title":"install"},{"location":"kbash-manual/#package_2","text":"kd tool_kernel kernel package Create Package","title":"package"},{"location":"kbash-manual/#about_1","text":"kd <command> [help] kd is a bash environment supporting development. kd is pure anti-pattern, in includes - 'within-environment' mutations- bash functions allow forward mutation of the active environment, with no guarantees of any stable state, save the single application of this function after a clean reset - pure 'side-effect' focus. This is an attempt to identify mutators to the filesystem, and to codify them. All functions and commands in the environment are expected to operate upon the filesystem directly. git provides us exceptional visiblity into changes over the active checkout. kd supports the development of ad-hoc tasks required to effectively build a complex, multi-project system. As knowledge is captured w/in the kd script system, it is added into the compiled node or python build support tools. But when you have to adapt to an existing culture, as in a fork, you need a little grease. The node and python knowledge is the organized grease to glue a complete system onto a consistent base. kd uses a \"Convention over Configuration\" and heavily seeds a bash operating environment with functions and variables, supporting multi-tech integration projects. The ability to \"regenerate\" the environment from the kd reset command means that scripts can be rapidly edited and applied - recorded in a pull-request, and the collective wisdom knitting forward. kd can be rapidly and ad-hoc adjusted, and it is specific to this repository. The bashenv orchestrates the connection of the environment with a conversational mutator - a live bash shell. As this is bound to a repository top, the space underneath is managed - so this is effectively a bash shell over a commit-trail of reference. kd is scoped by directory (or checkout) - based on the KITWB variable. KITWB = /home/ewelton/Desktop/korsimoro/projects/kit-workbench For more information, check out this file: /home/ewelton/Desktop/korsimoro/projects/kit-workbench/docs/bashenv.md In general use kd [cmd] help for more information.","title":"About"},{"location":"tool-manual/","text":"tool Usage: cli [OPTIONS] COMMAND [ARGS]... CLI utilities for interacting with the identity-tech ecosystem. Options: --config-path DIRECTORY Changes the configuration environment. -v, --verbose Enables verbose mode. --help Show this message and exit. Commands: config Manage the toolkit configuration settings. docptr Manage DocPtrs, which describe a document which can be referenced... eco Perform ecosystem level tasks. github Manage GitHubs, which describe a document which can be referenced... gitworm Manage GitWorm checkout. google Read/Write Google Assets. help prints help info local Translate between workspace resident JSON data models. logs View, export and clear semantic log data. manual dumps the manual nlp Apply NLP logic. web Work with non-API based web sources. workspace Manipulate the workspace xlate Translate between workspace resident JSON data models. config Usage: config [OPTIONS] COMMAND [ARGS]... Manage the toolkit configuration settings. Options: --help Show this message and exit. Commands: dump Save the current snapshot as JSON. load Replace the existing configuration with another. path Report the current configuration directory. dump Usage: dump [OPTIONS] Options: --save FILENAME path to file, or - for stdout --help Show this message and exit. load Usage: load [OPTIONS] Replace the existing configuration with another Options: --new-config FILENAME input data [required] --help Show this message and exit. path Usage: path [OPTIONS] Report the current configuration directory Options: --help Show this message and exit. docptr Usage: docptr [OPTIONS] COMMAND [ARGS]... Manage DocPtrs, which describe a document which can be referenced using a short-form document name, and is either out there, on the internet (e.g. a google spreadsheet) or is local. Docptrs maintain information about how to access each type of file. Options: --name TEXT name of the docptr in scope --help Show this message and exit. Commands: add Add docptrs clear Erase all docptrs. del Remove a document from consideration. info Dump info of docptr list List all docptrs. resolve Resolve a model definition tag Manage Tags on DocPtrs add Usage: add [OPTIONS] COMMAND [ARGS]... Add docptrs Options: --update update an existing docptr --tag TEXT Initial tags to provide --help Show this message and exit. Commands: google-doc Add a google doc as a docptr google-file Add an arbitary file (not gdoc or gsheet) google-folder Add a google folder google-spreadsheet Add a google spreadsheet as a docptr google-worksheet Add a google sheet as a docptr workspace-doc Add a local workspace file google-doc Usage: google-doc [OPTIONS] Add a google doc as a docptr Options: --fileid GOOGLE-DRIVE-FILE [required] --help Show this message and exit. google-file Usage: google-file [OPTIONS] Add an arbitary file (not gdoc or gsheet) Options: --fileid GOOGLE-DRIVE-FILE [required] --mime-type TEXT [required] --help Show this message and exit. google-folder Usage: google-folder [OPTIONS] Add a google folder Options: --folder GOOGLE-DRIVE-FOLDER-ID --help Show this message and exit. google-spreadsheet Usage: google-spreadsheet [OPTIONS] Add a google spreadsheet as a docptr Options: --file GOOGLE-SHEET-FILE --help Show this message and exit. google-worksheet Usage: google-worksheet [OPTIONS] Add a google sheet as a docptr Options: --sheet GOOGLE-SHEET-FILE --help Show this message and exit. workspace-doc Usage: workspace-doc [OPTIONS] Add a local workspace file Options: --path TEXT --help Show this message and exit. clear Usage: clear [OPTIONS] Erase all docptrs. Options: --help Show this message and exit. del Usage: del [OPTIONS] Simply report the current configuration used by default. Options: --help Show this message and exit. info Usage: info [OPTIONS] Dump info of docptr Options: --help Show this message and exit. list Usage: list [OPTIONS] Report list of document pointers in various formats and apply various filters. Options: --include [all|retired-only|active-only] Include Only Retired or All --type TEXT Type to include --table-slugify TEXT Slugify rows. --table-sort TEXT Sort by cols, in order --table-no-col TEXT Exclude these cols. --table-col TEXT Emit only these cols. --table-list TEXT Emit one col as a list (for shell work). --table-skip-data Print column headers only. --table-reduce Reduce table contents. --quiet Do not display pretty table --json-minify Should the data be minified --json-indent INTEGER How much to indent formatted json --json FILENAME Path to which to save the data as JSON, - for stdout --json-dp-tag TAG-SET-OPTION Tag associated docptr thusly --json-dp-create Create docptr if required --csv FILENAME Path to which to save the data as csv, - for stdout --csv-dp-tag TAG-SET-OPTION Tag associated docptr thusly --csv-dp-create Create docptr if required --xlsx FILENAME Path to which to save the data as xlsx, - for stdout --xlsx-dp-tag TAG-SET-OPTION Tag associated docptr thusly --xlsx-dp-create Create docptr if required --help Show this message and exit. resolve Usage: resolve [OPTIONS] Resolve a model definition Options: --using TEXT what to resolve [required] --table-slugify TEXT Slugify rows. --table-sort TEXT Sort by cols, in order --table-no-col TEXT Exclude these cols. --table-col TEXT Emit only these cols. --table-list TEXT Emit one col as a list (for shell work). --table-skip-data Print column headers only. --table-reduce Reduce table contents. --quiet Do not display pretty table --json-minify Should the data be minified --json-indent INTEGER How much to indent formatted json --json FILENAME Path to which to save the data as JSON, - for stdout --json-dp-tag TAG-SET-OPTION Tag associated docptr thusly --json-dp-create Create docptr if required --csv FILENAME Path to which to save the data as csv, - for stdout --csv-dp-tag TAG-SET-OPTION Tag associated docptr thusly --csv-dp-create Create docptr if required --xlsx FILENAME Path to which to save the data as xlsx, - for stdout --xlsx-dp-tag TAG-SET-OPTION Tag associated docptr thusly --xlsx-dp-create Create docptr if required --help Show this message and exit. tag Usage: tag [OPTIONS] COMMAND [ARGS]... Manage Tags on DocPtrs Options: --help Show this message and exit. Commands: add Add a tag to a docptr. list List all tags used by docptrs. remove Remove a tag from a docptr. report Generate detailed report about tag use. add Usage: add [OPTIONS] Add a tag to a docptr. Options: --name TEXT name of docptr [required] --tag TEXT tag to add [required] --help Show this message and exit. list Usage: list [OPTIONS] List all tags used by docptrs. Options: --table-slugify TEXT Slugify rows. --table-sort TEXT Sort by cols, in order --table-no-col TEXT Exclude these cols. --table-col TEXT Emit only these cols. --table-list TEXT Emit one col as a list (for shell work). --table-skip-data Print column headers only. --table-reduce Reduce table contents. --quiet Do not display pretty table --json-minify Should the data be minified --json-indent INTEGER How much to indent formatted json --json FILENAME Path to which to save the data as JSON, - for stdout --json-dp-tag TAG-SET-OPTION Tag associated docptr thusly --json-dp-create Create docptr if required --csv FILENAME Path to which to save the data as csv, - for stdout --csv-dp-tag TAG-SET-OPTION Tag associated docptr thusly --csv-dp-create Create docptr if required --xlsx FILENAME Path to which to save the data as xlsx, - for stdout --xlsx-dp-tag TAG-SET-OPTION Tag associated docptr thusly --xlsx-dp-create Create docptr if required --help Show this message and exit. remove Usage: remove [OPTIONS] Simply report the current configuration used by default. Options: --help Show this message and exit. report Usage: report [OPTIONS] Simply report the current configuration used by default. Options: --help Show this message and exit. eco Usage: eco [OPTIONS] COMMAND [ARGS]... Perform ecosystem level tasks. Options: --help Show this message and exit. Commands: consume Consume information from ecosystem endpoints. focus Perform focused ecosystem level tasks. model Work directly with model elements produce Publish information from the KISIA model consume Usage: consume [OPTIONS] COMMAND [ARGS]... Consume information from ecosystem endpoints. Endpoint names are docptrs..... link to docptrs generic doc types : DID Service Endpoint, URL, Repo, Etc..... When you state \"Consume <X>\" you reach out to data source <X>, and engage an accessor, which uses *your* authority on the named services to access information. This provides a real-world, up-to-date, active api bridge - which can be improved as identity-tech matures. The intent of a \"consume\" command is always an update to the data record, which is always attached to a context, and it is always based upon a query into the environment. We understand the query, in this case, to be both named and parametric. The query execution then collects and reports the When you execute the consume command, you must provide an explanation as to why. which has whatever logic it needs and tries to integrate with the local authentication The result of a \"consume\" command is an update to the local data record, and as such, it requires a statement of \"intention\". Thinking in terms of a cheque from days of old, the \"intention\" is the specified words, and the attached log-records are the expression of that intent. The signature upon the check is applied provided that the intent- calculation responds w/o error. Running the \"tool eco consume\" command should be considered like drawing upon a bank, but instead of currency offering a data-expression. Don't be quick to turn this into a \"smart contract\" - instead, just watch the ceremony.... You first declare an intent to receive-information: <wrapper provider=X > you request the information from a <provider> of that information the provider responds (or errors) </wrapper> where wrapper Business Consume Tasks - manage information about a business - record the sponsoring of an event - manage records of business partnerships Legal Consume Tasks - manage information about recent legislation Technology Consume Tasks - manage information about a standard - manage information about a signficant repository Options: --help Show this message and exit. Commands: dif Personal Data hyperledger Personal Data idcommons Personal Data iiw Personal Data mydata Personal Data pd Personal Data rwot Personal Data sovrin Personal Data ssimeetup Personal Data veres_one Personal Data dif Usage: dif [OPTIONS] COMMAND [ARGS]... Personal Data Options: --help Show this message and exit. hyperledger Usage: hyperledger [OPTIONS] COMMAND [ARGS]... Personal Data Options: --help Show this message and exit. idcommons Usage: idcommons [OPTIONS] COMMAND [ARGS]... Personal Data Options: --help Show this message and exit. iiw Usage: iiw [OPTIONS] COMMAND [ARGS]... Personal Data Options: --help Show this message and exit. mydata Usage: mydata [OPTIONS] COMMAND [ARGS]... Personal Data Options: --help Show this message and exit. pd Usage: pd [OPTIONS] COMMAND [ARGS]... Personal Data Options: --help Show this message and exit. rwot Usage: rwot [OPTIONS] COMMAND [ARGS]... Personal Data Options: --help Show this message and exit. sovrin Usage: sovrin [OPTIONS] COMMAND [ARGS]... Personal Data Options: --help Show this message and exit. ssimeetup Usage: ssimeetup [OPTIONS] COMMAND [ARGS]... Personal Data Options: --help Show this message and exit. veres_one Usage: veres_one [OPTIONS] COMMAND [ARGS]... Personal Data Options: --help Show this message and exit. focus Usage: focus [OPTIONS] COMMAND [ARGS]... Perform focused ecosystem level tasks. Focused tasks manpipulate the KISIA model through filters that help maintain the integraty of the global map. Business Focus Tasks - manage information about a business - record the sponsoring of an event - manage records of business partnerships Legal Focus Tasks - manage information about recent legislation Technology Focus Tasks - manage information about a standard - manage information about a signficant repository Options: --help Show this message and exit. Commands: business Manipulate information about the business aspects of SSI. legal Manipulate information about the Legal aspects of SSI. technical Manipulate information about the Technical aspects of SSI. business Usage: business [OPTIONS] COMMAND [ARGS]... Manipulate information about the business aspects of SSI. Specific Business Events report-event anticipate-event announce- event announce-capability Ontology Core assert-event-info assert-product-info assert- capability-info Cross focus linking is managed in this way legal-bridge tech-bridge Options: --help Show this message and exit. legal Usage: legal [OPTIONS] COMMAND [ARGS]... Manipulate information about the Legal aspects of SSI. Specific Legal Events report-event anticipate-event announce-event announce-capability Ontology Core assert-legislation-info assert-jurisdiction-info assert-project-info assert-repository-info assert-feature-info Cross focus linking is managed in this way legal-bridge tech-bridge Options: --help Show this message and exit. technical Usage: technical [OPTIONS] COMMAND [ARGS]... Manipulate information about the Technical aspects of SSI. Options: --help Show this message and exit. model Usage: model [OPTIONS] COMMAND [ARGS]... Work directly with model elements Options: --help Show this message and exit. Commands: authority Governments, Jurisdictions, and other governing bodies. capability Capabilities are things we can do. documents Documents are publications, legislation, papers,... events Events are things that happen. geography Countries, Governments, legal Not sure how to decompose this... organizations Companies, Projects, Teams, Working Groups, etc. people Natural Persons repositories Manage information about Standards requirements What does SSI technology need to do? standards Technical specifications around which groups can organize use_cases Manage information about SSI UseCases authority assert Import Error capability assert Import Error documents assert Import Error import-to-workspace Import Error events assert Import Error geography assert Import Error legal assert Import Error organizations assert Import Error people assert Import Error repositories assert Import Error requirements assert Import Error standards assert Import Error use_cases assert Import Error produce Usage: produce [OPTIONS] COMMAND [ARGS]... Publish information from the KISIA model Options: --help Show this message and exit. github Usage: github [OPTIONS] COMMAND [ARGS]... Manage GitHubs, which describe a document which can be referenced using a short-form document name, and is either out there, on the internet (e.g. a google spreadsheet) or is local. Docptrs maintain information about how to access each type of file. Options: --help Show this message and exit. Commands: describe Describe a repository org Work with github organizations spider Spider an organization describe Usage: describe [OPTIONS] Obtain information about a repository Options: --repo TEXT The repo --help Show this message and exit. org Usage: org [OPTIONS] ORG COMMAND [ARGS]... Work with github organizations Options: --help Show this message and exit. Commands: repolist Dump information about the repos repolist Usage: repolist [OPTIONS] Dump information about the repos Options: --table-slugify TEXT Slugify rows. --table-sort TEXT Sort by cols, in order --table-no-col TEXT Exclude these cols. --table-col TEXT Emit only these cols. --table-list TEXT Emit one col as a list (for shell work). --table-skip-data Print column headers only. --table-reduce Reduce table contents. --quiet Do not display pretty table --json-minify Should the data be minified --json-indent INTEGER How much to indent formatted json --json FILENAME Path to which to save the data as JSON, - for stdout --json-dp-tag TAG-SET-OPTION Tag associated docptr thusly --json-dp-create Create docptr if required --csv FILENAME Path to which to save the data as csv, - for stdout --csv-dp-tag TAG-SET-OPTION Tag associated docptr thusly --csv-dp-create Create docptr if required --xlsx FILENAME Path to which to save the data as xlsx, - for stdout --xlsx-dp-tag TAG-SET-OPTION Tag associated docptr thusly --xlsx-dp-create Create docptr if required --help Show this message and exit. spider Usage: spider [OPTIONS] Obtain information about an organization Options: --org TEXT The repo --help Show this message and exit. gitworm Usage: gitworm [OPTIONS] COMMAND [ARGS]... Manage GitWorm checkout. Options: --worm DIRECTORY path to worm base --identity TEXT identity --help Show this message and exit. Commands: export Export gitworm to a single json file. import Import from single json file and store it in gitworm. info Dump information about gitworm pull Pull all branch data and update current branch. push Push all branch data from current branch. status Report status about the gitworm checkout. test Dump information about gitworm export Usage: export [OPTIONS] Export gitworm to a single json file. Options: --save FILENAME path to JSON file to export --help Show this message and exit. import Usage: import [OPTIONS] Import from single json file and store it in gitworm. Options: --load FILENAME path to JSON file to import --prune delete anything not in input --message TEXT path to file [required] --help Show this message and exit. info Usage: info [OPTIONS] Dump information about gitworm Options: --help Show this message and exit. pull Usage: pull [OPTIONS] Options: --help Show this message and exit. push Usage: push [OPTIONS] Options: --help Show this message and exit. status Usage: status [OPTIONS] Report status about the gitworm checkout. Options: --help Show this message and exit. test Usage: test [OPTIONS] Dump information about gitworm Options: --help Show this message and exit. google Usage: google [OPTIONS] COMMAND [ARGS]... Read/Write Google Assets. These commands support scripted access to a pool of google assets, which include: * Google Auth Mgmt * Google Documents - support for transation to/from HTML - support for transation to/from JSON (internal structure) * Google Sheets - range editing (upload to replace, and download to JSON) - values - conditional-formatting - formulas - sheet/document management - delete a sheet - clear an entire document - copy one or more sheets, from one or more documents to a single document - json coupling - download one more more sheets, from one or more documents to a single JSON file - assert a document structure from a JSON file, making each identified document match the specification * Google Presentations (not yet supported) * Conventional Mime-Types - basic upload/download with simple mime-type handling These commands are integrated with the workspace configuration system. We'll get to this - talk about docptrs - talk about resource sets - coupling of login w/ config & environment Internal JSON file formats - 2D JSON - Value Data - Conditional Formatting Data - Formula Data - JSON Google Sheet Data Model (multiple Document/Worksheet) - JSON Google Doc Structural Map Options: --help Show this message and exit. Commands: basic-download Simple download command (for script support). basic-upload Simple upload command (for script support). drive-scan List spreadsheet documents in folder. gdoc-assemble Assemble a google doc from a structure. gdoc-assert Make a google doc look like a local doc gdoc-destructure Break a google doc into text blobs. gdoc-download Download a google doc. login Login to Google. logout Logout of Google. model-assert Make google sheets look like the input. model-download Sheet model download. range-download Copy a 2D array of values out of a sheet. range-patch Copy a 2D array of values into a sheet. setup Login to Google. sheet-combine Combine multiple sheets into one. sheet-delete Delete a sheet from a gsheet document. sheet-list List sheets in a gsheet document. basic-download Usage: basic-download [OPTIONS] Download a file. This is intended to serve as a primitive for use within scripts and to integrate basic file motion for supporting documents, other than sheets and google docs (or google slides, etc.) These are identified by a simple mime-type, which is guessed by file extension if not stated explicitly. Options: --doc GOOGLE-DRIVE-FILE FileId or url of existing file [required] --save FILENAME path to file, or - for stdout [required] --type TEXT type of data to download --to TEXT docptr, when we get around to those --help Show this message and exit. basic-upload Usage: basic-upload [OPTIONS] Upload a file. This is intended to serve as a primitive for use within scripts and to integrate basic file motion for supporting documents, other than sheets and google docs (or google slides, etc.) These are identified by a simple mime-type, which is guessed by file extension if not stated explicitly. Options: --folder GOOGLE-DRIVE-FILE FileId of existing file --load FILENAME path to file --type TEXT type of data to upload [required] --from TEXT docptr, when we get around to those --help Show this message and exit. drive-scan Usage: drive-scan [OPTIONS] Scan google folder recursively and map sheets Options: --folder GOOGLE-DRIVE-FOLDER-ID [required] --depth INTEGER --type [spreadsheet|document|folder|worksheet] filter for type --table-slugify TEXT Slugify rows. --table-sort TEXT Sort by cols, in order --table-no-col TEXT Exclude these cols. --table-col TEXT Emit only these cols. --table-list TEXT Emit one col as a list (for shell work). --table-skip-data Print column headers only. --table-reduce Reduce table contents. --quiet Do not display pretty table --json-minify Should the data be minified --json-indent INTEGER How much to indent formatted json --json FILENAME Path to which to save the data as JSON, - for stdout --json-dp-tag TAG-SET-OPTION Tag associated docptr thusly --json-dp-create Create docptr if required --csv FILENAME Path to which to save the data as csv, - for stdout --csv-dp-tag TAG-SET-OPTION Tag associated docptr thusly --csv-dp-create Create docptr if required --xlsx FILENAME Path to which to save the data as xlsx, - for stdout --xlsx-dp-tag TAG-SET-OPTION Tag associated docptr thusly --xlsx-dp-create Create docptr if required --docptrs Create docptrs --tag TEXT Initial tags to provide --help Show this message and exit. gdoc-assemble Usage: gdoc-assemble [OPTIONS] Given a JSON file in the format provided by gdoc-desctructure Options: --doc GOOGLE-DRIVE-FILE FileId or url of existing file [required] --from TEXT docptr, when we get around to those --help Show this message and exit. gdoc-assert Usage: gdoc-assert [OPTIONS] Upload a google doc. Options: --doc GOOGLE-DRIVE-FILE FileId or url of existing file [required] --load FILENAME path to file --from TEXT docptr, when we get around to those --help Show this message and exit. gdoc-destructure Usage: gdoc-destructure [OPTIONS] Analyze a gdoc and decompose it into a hierarchy of text blobs and store the result in a JSON file. Options: --doc GOOGLE-DRIVE-FILE FileId or url of existing file [required] --to TEXT docptr, when we get around to those --help Show this message and exit. gdoc-download Usage: gdoc-download [OPTIONS] Download a google doc in a specified format. Standard gdoc types can be used.... should we have aliases, like --type html or --type pdf? Options: --doc GOOGLE-DRIVE-FILE FileId or url of existing file [required] --save FILENAME path to file, or - for stdout --type TEXT type of data to download --to TEXT docptr, when we get around to those --help Show this message and exit. login Usage: login [OPTIONS] Log in to google and records API credentials in the config directory. Options: --help Show this message and exit. logout Usage: logout [OPTIONS] Logout of google and remove any config cached credentials. Options: --help Show this message and exit. model-assert Usage: model-assert [OPTIONS] Upload a JSON model, splitting it into documents and sheets. Every document touched will be erased and only the identified sheets will be present. Only values are uploaded, no conditional formating or formulas. Options: --using TEXT Named list of sheets defining a model --load TEXT path to file --from TEXT docptr, when we get around to those --help Show this message and exit. model-download Usage: model-download [OPTIONS] Download one or more sheets, from one or more documents, and combine them into a single JSON file format. Only values are downloaded. Options: --using TEXT Named list of sheets defining a model [required] --json-minify Should the data be minified --json-indent INTEGER How much to indent formatted json --json FILENAME Path to which to save the data as JSON, - for stdout --json-dp-tag TAG-SET-OPTION Tag associated docptr thusly --json-dp-create Create docptr if required --help Show this message and exit. range-download Usage: range-download [OPTIONS] Download a rectangle of JSON data from a specific point in an existing sheet. Examples: --------------------------------------------- # when processing from a script iterating over file ids range-download --sheet <GoogleSheetFile> --range arbitrary-string --save <writeableFilePath> --type <type> # when cutting/pasting a url from a browser, name sure that the # sheet name is appended in addition to the sheet id if present range-download --save <GoogleSheetFile> --range <GoogleRangeId> --save - --type <type> Options: --sheet GOOGLE-SHEET-FILE [required] --range CELL-RANGE cell range (eg. A1:B2) [required] --save FILENAME path to file, or - for stdout [required] --type [values|formula] type of data to download (values or formula) --help Show this message and exit. range-patch Usage: range-patch [OPTIONS] Upload a rectangle of JSON data to a specific point in an existing sheet. Examples: --------------------------------------------- # when processing from a script iterating over file ids range-patch --fileid <GoogleFileId> --sheet <GoogleSheetIdOrName> --cell <GoogleCellId> --values <pathToExisting2DJsonFile> # when cutting/pasting a url from a browser range-patch --url <GoogleSheetUrlId> --cell <GoogleCellId> --values <pathToExisting2DJsonFile> # updating the conditional formatting of a range range-patch --url <GoogleSheetUrlId> --cell <GoogleCellId> --metadata <pathToExisting2DJsonFileOfCellMetadata> Arguments: --------------------------------------------- fileid -> is the file id of the gsheet document, it must exist or an error is printed. sheet -> this is the string name of the sheet or the sheet id url -> this is the full url, including fileid and sheet id cell -> A1 or B77 and so forth values -> Path to existing file containing specific JSON (data rectangle of values) mnetadata -> Path to existing file containing specific JSON (data rectangle of metadata) Options: --fileid TEXT FileId of existing file --sheet TEXT sheet id or name --url TEXT complete url of existing file --values TEXT path to file --metadata TEXT path to file --cell TEXT name of cell in upper left --help Show this message and exit. setup Usage: setup [OPTIONS] Log in to google and records API credentials in the config directory. Options: --help Show this message and exit. sheet-combine Usage: sheet-combine [OPTIONS] Combine one or more sheets, from one or more documents, into a single document which contains just those sheets. The target document must exist ahead of time, but any contents will be deleted. Options: --sheet GOOGLE-DRIVE-FILE FileId or url of existing file [required] --using TEXT Named list of sheets defining a model [required] --help Show this message and exit. sheet-delete Usage: sheet-delete [OPTIONS] Delete a sheet from a gsheet document. Examples: --------------------------------------------- sheet-delete --sheet <GoogleSheetFile> Options: --sheet GOOGLE-SHEET-FILE [required] --help Show this message and exit. sheet-list Usage: sheet-list [OPTIONS] List sheets in a gsheet document Examples: --------------------------------------------- sheet-list --sheet <GoogleDocFile> Options: --doc GOOGLE-DRIVE-FILE FileId or url of existing file [required] --help Show this message and exit. help Usage: help [OPTIONS] prints help info Options: --help Show this message and exit. local Usage: local [OPTIONS] COMMAND [ARGS]... Translate between workspace resident JSON data models. Options: --help Show this message and exit. Commands: query Run Test Query query Usage: query [OPTIONS] Run Test Query Options: --from FILENAME input data --help Show this message and exit. logs Usage: logs [OPTIONS] COMMAND [ARGS]... View, export and clear semantic log data. Options: --help Show this message and exit. Commands: docs Export logs about doc updates. http Report logs about http traffic. docs Usage: docs [OPTIONS] Report information about docptr uploads, downloads. Options: --help Show this message and exit. http Usage: http [OPTIONS] Report information about docptr uploads, downloads. Options: --help Show this message and exit. manual Usage: manual [OPTIONS] dumps the manual Options: --help Show this message and exit. nlp Usage: nlp [OPTIONS] COMMAND [ARGS]... Apply NLP logic. Options: --help Show this message and exit. Commands: evalute-complexity Evaluate the Complexity of a Document. generate-glossary Evaluate the Complexity of a Document. generate-term-occurance-map Evaluate the Complexity of a Document. index-terms Evaluate the Complexity of a Document. split-sentences Evaluate the Complexity of a Document. evalute-complexity Usage: evalute-complexity [OPTIONS] Options: --help Show this message and exit. generate-glossary Usage: generate-glossary [OPTIONS] Options: --help Show this message and exit. generate-term-occurance-map Usage: generate-term-occurance-map [OPTIONS] Options: --help Show this message and exit. index-terms Usage: index-terms [OPTIONS] Options: --help Show this message and exit. split-sentences Usage: split-sentences [OPTIONS] Options: --help Show this message and exit. web Usage: web [OPTIONS] COMMAND [ARGS]... Work with non-API based web sources. Options: --help Show this message and exit. Commands: download Download a file via HTTP or HTTP(S). download Usage: download [OPTIONS] Download a file given a docptr or url, and update the document tracking logs. download --docptr <DocPtr> This will download a document and save it in specified workspace path. It will abort if no workspace path is configured. download --docptr <DocPtr> --to <WorkspacePath> This will download a document and set the workspace path to the workspace path given if the workspace path is not given. If the workspace path is given, and it does not match, then the command aborts. download --docptr <DocPtr> --save-to <SystemPath> This will download a document to a specific system path. download --url <Url> --to <WorkspacePath> This will assess a file from a URL and add it to the config as a docptr if the URL can be accessed. It will then trigger download via the docptr. Options: --help Show this message and exit. workspace change-path Usage: change-path [OPTIONS] Change workspace path in the configuration Options: --path DIRECTORY Source from which to load the data as JSON, - for stdin [required] --help Show this message and exit. clear Usage: clear [OPTIONS] Erase all workspace contents and workspace docptrs Options: --help Show this message and exit. docptrs Usage: docptrs [OPTIONS] Report list of document pointers in various formats and apply various filters. Options: --table-slugify TEXT Slugify rows. --table-sort TEXT Sort by cols, in order --table-no-col TEXT Exclude these cols. --table-col TEXT Emit only these cols. --table-list TEXT Emit one col as a list (for shell work). --table-skip-data Print column headers only. --table-reduce Reduce table contents. --quiet Do not display pretty table --json-minify Should the data be minified --json-indent INTEGER How much to indent formatted json --json FILENAME Path to which to save the data as JSON, - for stdout --json-dp-tag TAG-SET-OPTION Tag associated docptr thusly --json-dp-create Create docptr if required --csv FILENAME Path to which to save the data as csv, - for stdout --csv-dp-tag TAG-SET-OPTION Tag associated docptr thusly --csv-dp-create Create docptr if required --xlsx FILENAME Path to which to save the data as xlsx, - for stdout --xlsx-dp-tag TAG-SET-OPTION Tag associated docptr thusly --xlsx-dp-create Create docptr if required --help Show this message and exit. dump Usage: dump [OPTIONS] Dump workspace document as json Options: --from FILENAME Source from which to load the data as JSON, - for stdin [required] --json-minify Should the data be minified --json-indent INTEGER How much to indent formatted json --json FILENAME Path to which to save the data as JSON, - for stdout --json-dp-tag TAG-SET-OPTION Tag associated docptr thusly --json-dp-create Create docptr if required --help Show this message and exit.","title":"CLI"},{"location":"tool-manual/#tool","text":"Usage: cli [OPTIONS] COMMAND [ARGS]... CLI utilities for interacting with the identity-tech ecosystem. Options: --config-path DIRECTORY Changes the configuration environment. -v, --verbose Enables verbose mode. --help Show this message and exit. Commands: config Manage the toolkit configuration settings. docptr Manage DocPtrs, which describe a document which can be referenced... eco Perform ecosystem level tasks. github Manage GitHubs, which describe a document which can be referenced... gitworm Manage GitWorm checkout. google Read/Write Google Assets. help prints help info local Translate between workspace resident JSON data models. logs View, export and clear semantic log data. manual dumps the manual nlp Apply NLP logic. web Work with non-API based web sources. workspace Manipulate the workspace xlate Translate between workspace resident JSON data models.","title":"tool"},{"location":"tool-manual/#config","text":"Usage: config [OPTIONS] COMMAND [ARGS]... Manage the toolkit configuration settings. Options: --help Show this message and exit. Commands: dump Save the current snapshot as JSON. load Replace the existing configuration with another. path Report the current configuration directory.","title":"config"},{"location":"tool-manual/#dump","text":"Usage: dump [OPTIONS] Options: --save FILENAME path to file, or - for stdout --help Show this message and exit.","title":"dump"},{"location":"tool-manual/#load","text":"Usage: load [OPTIONS] Replace the existing configuration with another Options: --new-config FILENAME input data [required] --help Show this message and exit.","title":"load"},{"location":"tool-manual/#path","text":"Usage: path [OPTIONS] Report the current configuration directory Options: --help Show this message and exit.","title":"path"},{"location":"tool-manual/#docptr","text":"Usage: docptr [OPTIONS] COMMAND [ARGS]... Manage DocPtrs, which describe a document which can be referenced using a short-form document name, and is either out there, on the internet (e.g. a google spreadsheet) or is local. Docptrs maintain information about how to access each type of file. Options: --name TEXT name of the docptr in scope --help Show this message and exit. Commands: add Add docptrs clear Erase all docptrs. del Remove a document from consideration. info Dump info of docptr list List all docptrs. resolve Resolve a model definition tag Manage Tags on DocPtrs","title":"docptr"},{"location":"tool-manual/#add","text":"Usage: add [OPTIONS] COMMAND [ARGS]... Add docptrs Options: --update update an existing docptr --tag TEXT Initial tags to provide --help Show this message and exit. Commands: google-doc Add a google doc as a docptr google-file Add an arbitary file (not gdoc or gsheet) google-folder Add a google folder google-spreadsheet Add a google spreadsheet as a docptr google-worksheet Add a google sheet as a docptr workspace-doc Add a local workspace file","title":"add"},{"location":"tool-manual/#google-doc","text":"Usage: google-doc [OPTIONS] Add a google doc as a docptr Options: --fileid GOOGLE-DRIVE-FILE [required] --help Show this message and exit.","title":"google-doc"},{"location":"tool-manual/#google-file","text":"Usage: google-file [OPTIONS] Add an arbitary file (not gdoc or gsheet) Options: --fileid GOOGLE-DRIVE-FILE [required] --mime-type TEXT [required] --help Show this message and exit.","title":"google-file"},{"location":"tool-manual/#google-folder","text":"Usage: google-folder [OPTIONS] Add a google folder Options: --folder GOOGLE-DRIVE-FOLDER-ID --help Show this message and exit.","title":"google-folder"},{"location":"tool-manual/#google-spreadsheet","text":"Usage: google-spreadsheet [OPTIONS] Add a google spreadsheet as a docptr Options: --file GOOGLE-SHEET-FILE --help Show this message and exit.","title":"google-spreadsheet"},{"location":"tool-manual/#google-worksheet","text":"Usage: google-worksheet [OPTIONS] Add a google sheet as a docptr Options: --sheet GOOGLE-SHEET-FILE --help Show this message and exit.","title":"google-worksheet"},{"location":"tool-manual/#workspace-doc","text":"Usage: workspace-doc [OPTIONS] Add a local workspace file Options: --path TEXT --help Show this message and exit.","title":"workspace-doc"},{"location":"tool-manual/#clear","text":"Usage: clear [OPTIONS] Erase all docptrs. Options: --help Show this message and exit.","title":"clear"},{"location":"tool-manual/#del","text":"Usage: del [OPTIONS] Simply report the current configuration used by default. Options: --help Show this message and exit.","title":"del"},{"location":"tool-manual/#info","text":"Usage: info [OPTIONS] Dump info of docptr Options: --help Show this message and exit.","title":"info"},{"location":"tool-manual/#list","text":"Usage: list [OPTIONS] Report list of document pointers in various formats and apply various filters. Options: --include [all|retired-only|active-only] Include Only Retired or All --type TEXT Type to include --table-slugify TEXT Slugify rows. --table-sort TEXT Sort by cols, in order --table-no-col TEXT Exclude these cols. --table-col TEXT Emit only these cols. --table-list TEXT Emit one col as a list (for shell work). --table-skip-data Print column headers only. --table-reduce Reduce table contents. --quiet Do not display pretty table --json-minify Should the data be minified --json-indent INTEGER How much to indent formatted json --json FILENAME Path to which to save the data as JSON, - for stdout --json-dp-tag TAG-SET-OPTION Tag associated docptr thusly --json-dp-create Create docptr if required --csv FILENAME Path to which to save the data as csv, - for stdout --csv-dp-tag TAG-SET-OPTION Tag associated docptr thusly --csv-dp-create Create docptr if required --xlsx FILENAME Path to which to save the data as xlsx, - for stdout --xlsx-dp-tag TAG-SET-OPTION Tag associated docptr thusly --xlsx-dp-create Create docptr if required --help Show this message and exit.","title":"list"},{"location":"tool-manual/#resolve","text":"Usage: resolve [OPTIONS] Resolve a model definition Options: --using TEXT what to resolve [required] --table-slugify TEXT Slugify rows. --table-sort TEXT Sort by cols, in order --table-no-col TEXT Exclude these cols. --table-col TEXT Emit only these cols. --table-list TEXT Emit one col as a list (for shell work). --table-skip-data Print column headers only. --table-reduce Reduce table contents. --quiet Do not display pretty table --json-minify Should the data be minified --json-indent INTEGER How much to indent formatted json --json FILENAME Path to which to save the data as JSON, - for stdout --json-dp-tag TAG-SET-OPTION Tag associated docptr thusly --json-dp-create Create docptr if required --csv FILENAME Path to which to save the data as csv, - for stdout --csv-dp-tag TAG-SET-OPTION Tag associated docptr thusly --csv-dp-create Create docptr if required --xlsx FILENAME Path to which to save the data as xlsx, - for stdout --xlsx-dp-tag TAG-SET-OPTION Tag associated docptr thusly --xlsx-dp-create Create docptr if required --help Show this message and exit.","title":"resolve"},{"location":"tool-manual/#tag","text":"Usage: tag [OPTIONS] COMMAND [ARGS]... Manage Tags on DocPtrs Options: --help Show this message and exit. Commands: add Add a tag to a docptr. list List all tags used by docptrs. remove Remove a tag from a docptr. report Generate detailed report about tag use.","title":"tag"},{"location":"tool-manual/#add_1","text":"Usage: add [OPTIONS] Add a tag to a docptr. Options: --name TEXT name of docptr [required] --tag TEXT tag to add [required] --help Show this message and exit.","title":"add"},{"location":"tool-manual/#list_1","text":"Usage: list [OPTIONS] List all tags used by docptrs. Options: --table-slugify TEXT Slugify rows. --table-sort TEXT Sort by cols, in order --table-no-col TEXT Exclude these cols. --table-col TEXT Emit only these cols. --table-list TEXT Emit one col as a list (for shell work). --table-skip-data Print column headers only. --table-reduce Reduce table contents. --quiet Do not display pretty table --json-minify Should the data be minified --json-indent INTEGER How much to indent formatted json --json FILENAME Path to which to save the data as JSON, - for stdout --json-dp-tag TAG-SET-OPTION Tag associated docptr thusly --json-dp-create Create docptr if required --csv FILENAME Path to which to save the data as csv, - for stdout --csv-dp-tag TAG-SET-OPTION Tag associated docptr thusly --csv-dp-create Create docptr if required --xlsx FILENAME Path to which to save the data as xlsx, - for stdout --xlsx-dp-tag TAG-SET-OPTION Tag associated docptr thusly --xlsx-dp-create Create docptr if required --help Show this message and exit.","title":"list"},{"location":"tool-manual/#remove","text":"Usage: remove [OPTIONS] Simply report the current configuration used by default. Options: --help Show this message and exit.","title":"remove"},{"location":"tool-manual/#report","text":"Usage: report [OPTIONS] Simply report the current configuration used by default. Options: --help Show this message and exit.","title":"report"},{"location":"tool-manual/#eco","text":"Usage: eco [OPTIONS] COMMAND [ARGS]... Perform ecosystem level tasks. Options: --help Show this message and exit. Commands: consume Consume information from ecosystem endpoints. focus Perform focused ecosystem level tasks. model Work directly with model elements produce Publish information from the KISIA model","title":"eco"},{"location":"tool-manual/#consume","text":"Usage: consume [OPTIONS] COMMAND [ARGS]... Consume information from ecosystem endpoints. Endpoint names are docptrs..... link to docptrs generic doc types : DID Service Endpoint, URL, Repo, Etc..... When you state \"Consume <X>\" you reach out to data source <X>, and engage an accessor, which uses *your* authority on the named services to access information. This provides a real-world, up-to-date, active api bridge - which can be improved as identity-tech matures. The intent of a \"consume\" command is always an update to the data record, which is always attached to a context, and it is always based upon a query into the environment. We understand the query, in this case, to be both named and parametric. The query execution then collects and reports the When you execute the consume command, you must provide an explanation as to why. which has whatever logic it needs and tries to integrate with the local authentication The result of a \"consume\" command is an update to the local data record, and as such, it requires a statement of \"intention\". Thinking in terms of a cheque from days of old, the \"intention\" is the specified words, and the attached log-records are the expression of that intent. The signature upon the check is applied provided that the intent- calculation responds w/o error. Running the \"tool eco consume\" command should be considered like drawing upon a bank, but instead of currency offering a data-expression. Don't be quick to turn this into a \"smart contract\" - instead, just watch the ceremony.... You first declare an intent to receive-information: <wrapper provider=X > you request the information from a <provider> of that information the provider responds (or errors) </wrapper> where wrapper Business Consume Tasks - manage information about a business - record the sponsoring of an event - manage records of business partnerships Legal Consume Tasks - manage information about recent legislation Technology Consume Tasks - manage information about a standard - manage information about a signficant repository Options: --help Show this message and exit. Commands: dif Personal Data hyperledger Personal Data idcommons Personal Data iiw Personal Data mydata Personal Data pd Personal Data rwot Personal Data sovrin Personal Data ssimeetup Personal Data veres_one Personal Data","title":"consume"},{"location":"tool-manual/#dif","text":"Usage: dif [OPTIONS] COMMAND [ARGS]... Personal Data Options: --help Show this message and exit.","title":"dif"},{"location":"tool-manual/#hyperledger","text":"Usage: hyperledger [OPTIONS] COMMAND [ARGS]... Personal Data Options: --help Show this message and exit.","title":"hyperledger"},{"location":"tool-manual/#idcommons","text":"Usage: idcommons [OPTIONS] COMMAND [ARGS]... Personal Data Options: --help Show this message and exit.","title":"idcommons"},{"location":"tool-manual/#iiw","text":"Usage: iiw [OPTIONS] COMMAND [ARGS]... Personal Data Options: --help Show this message and exit.","title":"iiw"},{"location":"tool-manual/#mydata","text":"Usage: mydata [OPTIONS] COMMAND [ARGS]... Personal Data Options: --help Show this message and exit.","title":"mydata"},{"location":"tool-manual/#pd","text":"Usage: pd [OPTIONS] COMMAND [ARGS]... Personal Data Options: --help Show this message and exit.","title":"pd"},{"location":"tool-manual/#rwot","text":"Usage: rwot [OPTIONS] COMMAND [ARGS]... Personal Data Options: --help Show this message and exit.","title":"rwot"},{"location":"tool-manual/#sovrin","text":"Usage: sovrin [OPTIONS] COMMAND [ARGS]... Personal Data Options: --help Show this message and exit.","title":"sovrin"},{"location":"tool-manual/#ssimeetup","text":"Usage: ssimeetup [OPTIONS] COMMAND [ARGS]... Personal Data Options: --help Show this message and exit.","title":"ssimeetup"},{"location":"tool-manual/#veres_one","text":"Usage: veres_one [OPTIONS] COMMAND [ARGS]... Personal Data Options: --help Show this message and exit.","title":"veres_one"},{"location":"tool-manual/#focus","text":"Usage: focus [OPTIONS] COMMAND [ARGS]... Perform focused ecosystem level tasks. Focused tasks manpipulate the KISIA model through filters that help maintain the integraty of the global map. Business Focus Tasks - manage information about a business - record the sponsoring of an event - manage records of business partnerships Legal Focus Tasks - manage information about recent legislation Technology Focus Tasks - manage information about a standard - manage information about a signficant repository Options: --help Show this message and exit. Commands: business Manipulate information about the business aspects of SSI. legal Manipulate information about the Legal aspects of SSI. technical Manipulate information about the Technical aspects of SSI.","title":"focus"},{"location":"tool-manual/#business","text":"Usage: business [OPTIONS] COMMAND [ARGS]... Manipulate information about the business aspects of SSI. Specific Business Events report-event anticipate-event announce- event announce-capability Ontology Core assert-event-info assert-product-info assert- capability-info Cross focus linking is managed in this way legal-bridge tech-bridge Options: --help Show this message and exit.","title":"business"},{"location":"tool-manual/#legal","text":"Usage: legal [OPTIONS] COMMAND [ARGS]... Manipulate information about the Legal aspects of SSI. Specific Legal Events report-event anticipate-event announce-event announce-capability Ontology Core assert-legislation-info assert-jurisdiction-info assert-project-info assert-repository-info assert-feature-info Cross focus linking is managed in this way legal-bridge tech-bridge Options: --help Show this message and exit.","title":"legal"},{"location":"tool-manual/#technical","text":"Usage: technical [OPTIONS] COMMAND [ARGS]... Manipulate information about the Technical aspects of SSI. Options: --help Show this message and exit.","title":"technical"},{"location":"tool-manual/#model","text":"Usage: model [OPTIONS] COMMAND [ARGS]... Work directly with model elements Options: --help Show this message and exit. Commands: authority Governments, Jurisdictions, and other governing bodies. capability Capabilities are things we can do. documents Documents are publications, legislation, papers,... events Events are things that happen. geography Countries, Governments, legal Not sure how to decompose this... organizations Companies, Projects, Teams, Working Groups, etc. people Natural Persons repositories Manage information about Standards requirements What does SSI technology need to do? standards Technical specifications around which groups can organize use_cases Manage information about SSI UseCases","title":"model"},{"location":"tool-manual/#authority","text":"","title":"authority"},{"location":"tool-manual/#assert","text":"Import Error","title":"assert"},{"location":"tool-manual/#capability","text":"","title":"capability"},{"location":"tool-manual/#assert_1","text":"Import Error","title":"assert"},{"location":"tool-manual/#documents","text":"","title":"documents"},{"location":"tool-manual/#assert_2","text":"Import Error","title":"assert"},{"location":"tool-manual/#import-to-workspace","text":"Import Error","title":"import-to-workspace"},{"location":"tool-manual/#events","text":"","title":"events"},{"location":"tool-manual/#assert_3","text":"Import Error","title":"assert"},{"location":"tool-manual/#geography","text":"","title":"geography"},{"location":"tool-manual/#assert_4","text":"Import Error","title":"assert"},{"location":"tool-manual/#legal_1","text":"","title":"legal"},{"location":"tool-manual/#assert_5","text":"Import Error","title":"assert"},{"location":"tool-manual/#organizations","text":"","title":"organizations"},{"location":"tool-manual/#assert_6","text":"Import Error","title":"assert"},{"location":"tool-manual/#people","text":"","title":"people"},{"location":"tool-manual/#assert_7","text":"Import Error","title":"assert"},{"location":"tool-manual/#repositories","text":"","title":"repositories"},{"location":"tool-manual/#assert_8","text":"Import Error","title":"assert"},{"location":"tool-manual/#requirements","text":"","title":"requirements"},{"location":"tool-manual/#assert_9","text":"Import Error","title":"assert"},{"location":"tool-manual/#standards","text":"","title":"standards"},{"location":"tool-manual/#assert_10","text":"Import Error","title":"assert"},{"location":"tool-manual/#use_cases","text":"","title":"use_cases"},{"location":"tool-manual/#assert_11","text":"Import Error","title":"assert"},{"location":"tool-manual/#produce","text":"Usage: produce [OPTIONS] COMMAND [ARGS]... Publish information from the KISIA model Options: --help Show this message and exit.","title":"produce"},{"location":"tool-manual/#github","text":"Usage: github [OPTIONS] COMMAND [ARGS]... Manage GitHubs, which describe a document which can be referenced using a short-form document name, and is either out there, on the internet (e.g. a google spreadsheet) or is local. Docptrs maintain information about how to access each type of file. Options: --help Show this message and exit. Commands: describe Describe a repository org Work with github organizations spider Spider an organization","title":"github"},{"location":"tool-manual/#describe","text":"Usage: describe [OPTIONS] Obtain information about a repository Options: --repo TEXT The repo --help Show this message and exit.","title":"describe"},{"location":"tool-manual/#org","text":"Usage: org [OPTIONS] ORG COMMAND [ARGS]... Work with github organizations Options: --help Show this message and exit. Commands: repolist Dump information about the repos","title":"org"},{"location":"tool-manual/#repolist","text":"Usage: repolist [OPTIONS] Dump information about the repos Options: --table-slugify TEXT Slugify rows. --table-sort TEXT Sort by cols, in order --table-no-col TEXT Exclude these cols. --table-col TEXT Emit only these cols. --table-list TEXT Emit one col as a list (for shell work). --table-skip-data Print column headers only. --table-reduce Reduce table contents. --quiet Do not display pretty table --json-minify Should the data be minified --json-indent INTEGER How much to indent formatted json --json FILENAME Path to which to save the data as JSON, - for stdout --json-dp-tag TAG-SET-OPTION Tag associated docptr thusly --json-dp-create Create docptr if required --csv FILENAME Path to which to save the data as csv, - for stdout --csv-dp-tag TAG-SET-OPTION Tag associated docptr thusly --csv-dp-create Create docptr if required --xlsx FILENAME Path to which to save the data as xlsx, - for stdout --xlsx-dp-tag TAG-SET-OPTION Tag associated docptr thusly --xlsx-dp-create Create docptr if required --help Show this message and exit.","title":"repolist"},{"location":"tool-manual/#spider","text":"Usage: spider [OPTIONS] Obtain information about an organization Options: --org TEXT The repo --help Show this message and exit.","title":"spider"},{"location":"tool-manual/#gitworm","text":"Usage: gitworm [OPTIONS] COMMAND [ARGS]... Manage GitWorm checkout. Options: --worm DIRECTORY path to worm base --identity TEXT identity --help Show this message and exit. Commands: export Export gitworm to a single json file. import Import from single json file and store it in gitworm. info Dump information about gitworm pull Pull all branch data and update current branch. push Push all branch data from current branch. status Report status about the gitworm checkout. test Dump information about gitworm","title":"gitworm"},{"location":"tool-manual/#export","text":"Usage: export [OPTIONS] Export gitworm to a single json file. Options: --save FILENAME path to JSON file to export --help Show this message and exit.","title":"export"},{"location":"tool-manual/#import","text":"Usage: import [OPTIONS] Import from single json file and store it in gitworm. Options: --load FILENAME path to JSON file to import --prune delete anything not in input --message TEXT path to file [required] --help Show this message and exit.","title":"import"},{"location":"tool-manual/#info_1","text":"Usage: info [OPTIONS] Dump information about gitworm Options: --help Show this message and exit.","title":"info"},{"location":"tool-manual/#pull","text":"Usage: pull [OPTIONS] Options: --help Show this message and exit.","title":"pull"},{"location":"tool-manual/#push","text":"Usage: push [OPTIONS] Options: --help Show this message and exit.","title":"push"},{"location":"tool-manual/#status","text":"Usage: status [OPTIONS] Report status about the gitworm checkout. Options: --help Show this message and exit.","title":"status"},{"location":"tool-manual/#test","text":"Usage: test [OPTIONS] Dump information about gitworm Options: --help Show this message and exit.","title":"test"},{"location":"tool-manual/#google","text":"Usage: google [OPTIONS] COMMAND [ARGS]... Read/Write Google Assets. These commands support scripted access to a pool of google assets, which include: * Google Auth Mgmt * Google Documents - support for transation to/from HTML - support for transation to/from JSON (internal structure) * Google Sheets - range editing (upload to replace, and download to JSON) - values - conditional-formatting - formulas - sheet/document management - delete a sheet - clear an entire document - copy one or more sheets, from one or more documents to a single document - json coupling - download one more more sheets, from one or more documents to a single JSON file - assert a document structure from a JSON file, making each identified document match the specification * Google Presentations (not yet supported) * Conventional Mime-Types - basic upload/download with simple mime-type handling These commands are integrated with the workspace configuration system. We'll get to this - talk about docptrs - talk about resource sets - coupling of login w/ config & environment Internal JSON file formats - 2D JSON - Value Data - Conditional Formatting Data - Formula Data - JSON Google Sheet Data Model (multiple Document/Worksheet) - JSON Google Doc Structural Map Options: --help Show this message and exit. Commands: basic-download Simple download command (for script support). basic-upload Simple upload command (for script support). drive-scan List spreadsheet documents in folder. gdoc-assemble Assemble a google doc from a structure. gdoc-assert Make a google doc look like a local doc gdoc-destructure Break a google doc into text blobs. gdoc-download Download a google doc. login Login to Google. logout Logout of Google. model-assert Make google sheets look like the input. model-download Sheet model download. range-download Copy a 2D array of values out of a sheet. range-patch Copy a 2D array of values into a sheet. setup Login to Google. sheet-combine Combine multiple sheets into one. sheet-delete Delete a sheet from a gsheet document. sheet-list List sheets in a gsheet document.","title":"google"},{"location":"tool-manual/#basic-download","text":"Usage: basic-download [OPTIONS] Download a file. This is intended to serve as a primitive for use within scripts and to integrate basic file motion for supporting documents, other than sheets and google docs (or google slides, etc.) These are identified by a simple mime-type, which is guessed by file extension if not stated explicitly. Options: --doc GOOGLE-DRIVE-FILE FileId or url of existing file [required] --save FILENAME path to file, or - for stdout [required] --type TEXT type of data to download --to TEXT docptr, when we get around to those --help Show this message and exit.","title":"basic-download"},{"location":"tool-manual/#basic-upload","text":"Usage: basic-upload [OPTIONS] Upload a file. This is intended to serve as a primitive for use within scripts and to integrate basic file motion for supporting documents, other than sheets and google docs (or google slides, etc.) These are identified by a simple mime-type, which is guessed by file extension if not stated explicitly. Options: --folder GOOGLE-DRIVE-FILE FileId of existing file --load FILENAME path to file --type TEXT type of data to upload [required] --from TEXT docptr, when we get around to those --help Show this message and exit.","title":"basic-upload"},{"location":"tool-manual/#drive-scan","text":"Usage: drive-scan [OPTIONS] Scan google folder recursively and map sheets Options: --folder GOOGLE-DRIVE-FOLDER-ID [required] --depth INTEGER --type [spreadsheet|document|folder|worksheet] filter for type --table-slugify TEXT Slugify rows. --table-sort TEXT Sort by cols, in order --table-no-col TEXT Exclude these cols. --table-col TEXT Emit only these cols. --table-list TEXT Emit one col as a list (for shell work). --table-skip-data Print column headers only. --table-reduce Reduce table contents. --quiet Do not display pretty table --json-minify Should the data be minified --json-indent INTEGER How much to indent formatted json --json FILENAME Path to which to save the data as JSON, - for stdout --json-dp-tag TAG-SET-OPTION Tag associated docptr thusly --json-dp-create Create docptr if required --csv FILENAME Path to which to save the data as csv, - for stdout --csv-dp-tag TAG-SET-OPTION Tag associated docptr thusly --csv-dp-create Create docptr if required --xlsx FILENAME Path to which to save the data as xlsx, - for stdout --xlsx-dp-tag TAG-SET-OPTION Tag associated docptr thusly --xlsx-dp-create Create docptr if required --docptrs Create docptrs --tag TEXT Initial tags to provide --help Show this message and exit.","title":"drive-scan"},{"location":"tool-manual/#gdoc-assemble","text":"Usage: gdoc-assemble [OPTIONS] Given a JSON file in the format provided by gdoc-desctructure Options: --doc GOOGLE-DRIVE-FILE FileId or url of existing file [required] --from TEXT docptr, when we get around to those --help Show this message and exit.","title":"gdoc-assemble"},{"location":"tool-manual/#gdoc-assert","text":"Usage: gdoc-assert [OPTIONS] Upload a google doc. Options: --doc GOOGLE-DRIVE-FILE FileId or url of existing file [required] --load FILENAME path to file --from TEXT docptr, when we get around to those --help Show this message and exit.","title":"gdoc-assert"},{"location":"tool-manual/#gdoc-destructure","text":"Usage: gdoc-destructure [OPTIONS] Analyze a gdoc and decompose it into a hierarchy of text blobs and store the result in a JSON file. Options: --doc GOOGLE-DRIVE-FILE FileId or url of existing file [required] --to TEXT docptr, when we get around to those --help Show this message and exit.","title":"gdoc-destructure"},{"location":"tool-manual/#gdoc-download","text":"Usage: gdoc-download [OPTIONS] Download a google doc in a specified format. Standard gdoc types can be used.... should we have aliases, like --type html or --type pdf? Options: --doc GOOGLE-DRIVE-FILE FileId or url of existing file [required] --save FILENAME path to file, or - for stdout --type TEXT type of data to download --to TEXT docptr, when we get around to those --help Show this message and exit.","title":"gdoc-download"},{"location":"tool-manual/#login","text":"Usage: login [OPTIONS] Log in to google and records API credentials in the config directory. Options: --help Show this message and exit.","title":"login"},{"location":"tool-manual/#logout","text":"Usage: logout [OPTIONS] Logout of google and remove any config cached credentials. Options: --help Show this message and exit.","title":"logout"},{"location":"tool-manual/#model-assert","text":"Usage: model-assert [OPTIONS] Upload a JSON model, splitting it into documents and sheets. Every document touched will be erased and only the identified sheets will be present. Only values are uploaded, no conditional formating or formulas. Options: --using TEXT Named list of sheets defining a model --load TEXT path to file --from TEXT docptr, when we get around to those --help Show this message and exit.","title":"model-assert"},{"location":"tool-manual/#model-download","text":"Usage: model-download [OPTIONS] Download one or more sheets, from one or more documents, and combine them into a single JSON file format. Only values are downloaded. Options: --using TEXT Named list of sheets defining a model [required] --json-minify Should the data be minified --json-indent INTEGER How much to indent formatted json --json FILENAME Path to which to save the data as JSON, - for stdout --json-dp-tag TAG-SET-OPTION Tag associated docptr thusly --json-dp-create Create docptr if required --help Show this message and exit.","title":"model-download"},{"location":"tool-manual/#range-download","text":"Usage: range-download [OPTIONS] Download a rectangle of JSON data from a specific point in an existing sheet. Examples: --------------------------------------------- # when processing from a script iterating over file ids range-download --sheet <GoogleSheetFile> --range arbitrary-string --save <writeableFilePath> --type <type> # when cutting/pasting a url from a browser, name sure that the # sheet name is appended in addition to the sheet id if present range-download --save <GoogleSheetFile> --range <GoogleRangeId> --save - --type <type> Options: --sheet GOOGLE-SHEET-FILE [required] --range CELL-RANGE cell range (eg. A1:B2) [required] --save FILENAME path to file, or - for stdout [required] --type [values|formula] type of data to download (values or formula) --help Show this message and exit.","title":"range-download"},{"location":"tool-manual/#range-patch","text":"Usage: range-patch [OPTIONS] Upload a rectangle of JSON data to a specific point in an existing sheet. Examples: --------------------------------------------- # when processing from a script iterating over file ids range-patch --fileid <GoogleFileId> --sheet <GoogleSheetIdOrName> --cell <GoogleCellId> --values <pathToExisting2DJsonFile> # when cutting/pasting a url from a browser range-patch --url <GoogleSheetUrlId> --cell <GoogleCellId> --values <pathToExisting2DJsonFile> # updating the conditional formatting of a range range-patch --url <GoogleSheetUrlId> --cell <GoogleCellId> --metadata <pathToExisting2DJsonFileOfCellMetadata> Arguments: --------------------------------------------- fileid -> is the file id of the gsheet document, it must exist or an error is printed. sheet -> this is the string name of the sheet or the sheet id url -> this is the full url, including fileid and sheet id cell -> A1 or B77 and so forth values -> Path to existing file containing specific JSON (data rectangle of values) mnetadata -> Path to existing file containing specific JSON (data rectangle of metadata) Options: --fileid TEXT FileId of existing file --sheet TEXT sheet id or name --url TEXT complete url of existing file --values TEXT path to file --metadata TEXT path to file --cell TEXT name of cell in upper left --help Show this message and exit.","title":"range-patch"},{"location":"tool-manual/#setup","text":"Usage: setup [OPTIONS] Log in to google and records API credentials in the config directory. Options: --help Show this message and exit.","title":"setup"},{"location":"tool-manual/#sheet-combine","text":"Usage: sheet-combine [OPTIONS] Combine one or more sheets, from one or more documents, into a single document which contains just those sheets. The target document must exist ahead of time, but any contents will be deleted. Options: --sheet GOOGLE-DRIVE-FILE FileId or url of existing file [required] --using TEXT Named list of sheets defining a model [required] --help Show this message and exit.","title":"sheet-combine"},{"location":"tool-manual/#sheet-delete","text":"Usage: sheet-delete [OPTIONS] Delete a sheet from a gsheet document. Examples: --------------------------------------------- sheet-delete --sheet <GoogleSheetFile> Options: --sheet GOOGLE-SHEET-FILE [required] --help Show this message and exit.","title":"sheet-delete"},{"location":"tool-manual/#sheet-list","text":"Usage: sheet-list [OPTIONS] List sheets in a gsheet document Examples: --------------------------------------------- sheet-list --sheet <GoogleDocFile> Options: --doc GOOGLE-DRIVE-FILE FileId or url of existing file [required] --help Show this message and exit.","title":"sheet-list"},{"location":"tool-manual/#help","text":"Usage: help [OPTIONS] prints help info Options: --help Show this message and exit.","title":"help"},{"location":"tool-manual/#local","text":"Usage: local [OPTIONS] COMMAND [ARGS]... Translate between workspace resident JSON data models. Options: --help Show this message and exit. Commands: query Run Test Query","title":"local"},{"location":"tool-manual/#query","text":"Usage: query [OPTIONS] Run Test Query Options: --from FILENAME input data --help Show this message and exit.","title":"query"},{"location":"tool-manual/#logs","text":"Usage: logs [OPTIONS] COMMAND [ARGS]... View, export and clear semantic log data. Options: --help Show this message and exit. Commands: docs Export logs about doc updates. http Report logs about http traffic.","title":"logs"},{"location":"tool-manual/#docs","text":"Usage: docs [OPTIONS] Report information about docptr uploads, downloads. Options: --help Show this message and exit.","title":"docs"},{"location":"tool-manual/#http","text":"Usage: http [OPTIONS] Report information about docptr uploads, downloads. Options: --help Show this message and exit.","title":"http"},{"location":"tool-manual/#manual","text":"Usage: manual [OPTIONS] dumps the manual Options: --help Show this message and exit.","title":"manual"},{"location":"tool-manual/#nlp","text":"Usage: nlp [OPTIONS] COMMAND [ARGS]... Apply NLP logic. Options: --help Show this message and exit. Commands: evalute-complexity Evaluate the Complexity of a Document. generate-glossary Evaluate the Complexity of a Document. generate-term-occurance-map Evaluate the Complexity of a Document. index-terms Evaluate the Complexity of a Document. split-sentences Evaluate the Complexity of a Document.","title":"nlp"},{"location":"tool-manual/#evalute-complexity","text":"Usage: evalute-complexity [OPTIONS] Options: --help Show this message and exit.","title":"evalute-complexity"},{"location":"tool-manual/#generate-glossary","text":"Usage: generate-glossary [OPTIONS] Options: --help Show this message and exit.","title":"generate-glossary"},{"location":"tool-manual/#generate-term-occurance-map","text":"Usage: generate-term-occurance-map [OPTIONS] Options: --help Show this message and exit.","title":"generate-term-occurance-map"},{"location":"tool-manual/#index-terms","text":"Usage: index-terms [OPTIONS] Options: --help Show this message and exit.","title":"index-terms"},{"location":"tool-manual/#split-sentences","text":"Usage: split-sentences [OPTIONS] Options: --help Show this message and exit.","title":"split-sentences"},{"location":"tool-manual/#web","text":"Usage: web [OPTIONS] COMMAND [ARGS]... Work with non-API based web sources. Options: --help Show this message and exit. Commands: download Download a file via HTTP or HTTP(S).","title":"web"},{"location":"tool-manual/#download","text":"Usage: download [OPTIONS] Download a file given a docptr or url, and update the document tracking logs. download --docptr <DocPtr> This will download a document and save it in specified workspace path. It will abort if no workspace path is configured. download --docptr <DocPtr> --to <WorkspacePath> This will download a document and set the workspace path to the workspace path given if the workspace path is not given. If the workspace path is given, and it does not match, then the command aborts. download --docptr <DocPtr> --save-to <SystemPath> This will download a document to a specific system path. download --url <Url> --to <WorkspacePath> This will assess a file from a URL and add it to the config as a docptr if the URL can be accessed. It will then trigger download via the docptr. Options: --help Show this message and exit.","title":"download"},{"location":"tool-manual/#workspace","text":"","title":"workspace"},{"location":"tool-manual/#change-path","text":"Usage: change-path [OPTIONS] Change workspace path in the configuration Options: --path DIRECTORY Source from which to load the data as JSON, - for stdin [required] --help Show this message and exit.","title":"change-path"},{"location":"tool-manual/#clear_1","text":"Usage: clear [OPTIONS] Erase all workspace contents and workspace docptrs Options: --help Show this message and exit.","title":"clear"},{"location":"tool-manual/#docptrs","text":"Usage: docptrs [OPTIONS] Report list of document pointers in various formats and apply various filters. Options: --table-slugify TEXT Slugify rows. --table-sort TEXT Sort by cols, in order --table-no-col TEXT Exclude these cols. --table-col TEXT Emit only these cols. --table-list TEXT Emit one col as a list (for shell work). --table-skip-data Print column headers only. --table-reduce Reduce table contents. --quiet Do not display pretty table --json-minify Should the data be minified --json-indent INTEGER How much to indent formatted json --json FILENAME Path to which to save the data as JSON, - for stdout --json-dp-tag TAG-SET-OPTION Tag associated docptr thusly --json-dp-create Create docptr if required --csv FILENAME Path to which to save the data as csv, - for stdout --csv-dp-tag TAG-SET-OPTION Tag associated docptr thusly --csv-dp-create Create docptr if required --xlsx FILENAME Path to which to save the data as xlsx, - for stdout --xlsx-dp-tag TAG-SET-OPTION Tag associated docptr thusly --xlsx-dp-create Create docptr if required --help Show this message and exit.","title":"docptrs"},{"location":"tool-manual/#dump_1","text":"Usage: dump [OPTIONS] Dump workspace document as json Options: --from FILENAME Source from which to load the data as JSON, - for stdin [required] --json-minify Should the data be minified --json-indent INTEGER How much to indent formatted json --json FILENAME Path to which to save the data as JSON, - for stdout --json-dp-tag TAG-SET-OPTION Tag associated docptr thusly --json-dp-create Create docptr if required --help Show this message and exit.","title":"dump"},{"location":"sphinx/_static/","text":"","title":"Home"}]}